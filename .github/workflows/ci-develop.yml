name: ci-develop
on:
  push:
    branches:
    - development
env:
  AWS_DEFAULT_REGION: "eu-central-1"
  ECR_REPO_HOST: "678053966837.dkr.ecr.eu-central-1.amazonaws.com"
  ECR_REPO_NAME: "becoronalert/statistics-service"
  AWS_ACCESS_KEY_ID_TST_PUSHECR: "AKIAYQI56444D6NQRCHO"
  SERVICE_NAMES_TST: "Covid19DevECS2-ServiceStatistics-VJPV2PI7IFNZ"
  CLUSTER_NAME_TST: "ecs-covid19-tst"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/cache@v1
      env:
        cache-name: m2
      with:
        path: ~/.m2/repository
        key: ${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ env.cache-name }}-
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: mvn package
      run: mvn --batch-mode package
    - name: docker build
      run: |
        docker build \
        --tag ${ECR_REPO_HOST}/${ECR_REPO_NAME}:develop \
        --tag ${ECR_REPO_HOST}/${ECR_REPO_NAME}:latest \
        .
    - name: docker push ecr
      run: |
        sudo apt-get install --yes awscli
        aws ecr get-login-password | docker login --username AWS --password-stdin ${ECR_REPO_HOST}
        docker push ${ECR_REPO_HOST}/${ECR_REPO_NAME}:develop
        docker push ${ECR_REPO_HOST}/${ECR_REPO_NAME}:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ AWS_ACCESS_KEY_ID_PUSHECR }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_TST_PUSHECR }}
    - name: Force deploy service on ECS in tst
      run: |
        sudo apt-get install --yes awscli
        for service in ${SERVICE_NAMES}; do
          aws ecs update-service --cluster ${CLUSTER_NAME} --force-new-deployment --service ${service} --region ${AWS_REGION:-eu-central-1}
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ AWS_ACCESS_KEY_ID_TST_PUSHECR }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_TST_PUSHECR }}
        SERVICE_NAMES: ${{ SERVICE_NAMES_TST }}
        CLUSTER_NAME: ${{ CLUSTER_NAME_TST }}

